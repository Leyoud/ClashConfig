---
# HTTP(S) 和 SOCKS4(A)/SOCKS5 代理服务共用一个端口
mixed-port: 7890

# Linux 和 macOS 的透明代理服务端口 (TCP 和 TProxy UDP 重定向)
redir-port: 7892

# 允许局域网的连接 (需系统防火墙放行)
allow-lan: false

# 仅在将allow-lan设置为true时适用
# "*": 绑定所有IP地址
# 192.168.122.11: 绑定单个IPv4地址
# "[aaaa::a8aa:ff:fe09:57d8]": 绑定单个IPv6地址
bind-address: "*"

# 规则模式：rule（规则） / global（全局代理）/ direct（全局直连）/ script (脚本)
mode: rule

# 设置日志输出级别 (默认级别：silent,即不输出任何内容,以避免因日志内容过大而导致程序内存溢出）。
# 5 个级别：silent / info / warning / error / debug。级别越高日志输出量越大,越倾向于调试,若需要请自行开启。
log-level: info

# Clash 的 RESTful API, 127.0.0.1:9090 | 0.0.0.0:9090
external-controller: 127.0.0.1:9090

# RESTful API 的口令 (可选)
# 通过指定 HTTP 头 `Authorization: Bearer ${secret}` 进行身份验证
# 如果RESTful API在 0.0.0.0 上监听, 务必设置一个 secret 密钥
secret: ""

# 配置目录的相对路径或静态 Web 资源目录的绝对路径. Clash core 将在
# `http://{{external-controller}}/ui` 中提供服务.
# http://0.0.0.0:9090/ui
# external-ui: folder
# yacd面板：  https://yacd.haishan.me
# Razord面板：https://clash.razord.top
external-ui: ./

# 本地 SOCKS5 / HTTP(S) 服务认证
# authentication:
#   - user1:pass1
#   - user2:pass2
authentication: []

# ipv6开关,当设置为 false 时, 解析器不会将主机名解析为 IPv6 地址
ipv6: false

# 用于DNS服务器和连接建立的静态主机 (如/etc/hosts) .
#
# 支持通配符主机名 (例如 *.clash.dev, *.foo.*.example.com)
# 非通配符域名优先级高于通配符域名
# 例如 foo.example.com > *.example.com > .example.com
# P.S. +.foo.com 等于 .foo.com 和 foo.com
hosts:
    "*.clash.dev": 127.0.0.1
    ".dev": 127.0.0.1
    "alpha.clash.dev": "::1"

dns:
    enable: false # dns开关
    ipv6: true    # 当为 false 时, AAAA 查询的响应将为空
    listen: 0.0.0.0:53  # dns监听服务
    enhanced-mode: fake-ip # dns处理模式, redir-host模式自premium-2023.02.16开始已弃用
    use-hosts: true # 查找 hosts 并返回 IP 记录
    fake-ip-range: 198.18.0.1/16 # Fake IP 地址池 CIDR
    fake-ip-filter:
        # 此列表中的主机名将不会使用fake-ip解析,仍然遵循redir-host处理逻辑
        - +.stun.*.*
        - +.stun.*.*.*
        - +.stun.*.*.*.*
        - +.stun.*.*.*.*.*
        - "*.n.n.srv.nintendo.net"
        - +.stun.playstation.net
        - xbox.*.*.microsoft.com
        - "*.*.xboxlive.com"
        - "*.msftncsi.com"
        - "*.msftconnecttest.com"
        - WORKGROUP
    nameserver-policy:
        # 指定域名查询的解析服务器
        www.baidu.com: 223.6.6.6
        '+.internal.crop.com': 10.0.0.1
    default-nameserver:
        # 为nameserver设置默认值(可选), 必须为 ip
        - 114.114.114.114
        - 8.8.8.8
    nameserver:
        # 默认dns解析 支持 UDP、TCP、DoT、DoH
        - 223.6.6.6 # 阿里DNS
        - 223.5.5.5 # 阿里DNS
        - 180.76.76.76 # 百度DNS
        - 119.29.29.29 # 腾讯DNS
        - 117.50.10.10 # ONE DNS纯净版
        - 114.114.114.114 # 114DNS
        - 114.114.115.115 # 114DNS
        - tls://dns.alidns.com:853 # 阿里 DoT DNS
        - https://dns.alidns.com/dns-query # 阿里 DoH DNS
        - https://alidns_ip/dns-query # 阿里 DoH DNS
        - https://doh.360.cn/dns-query # 360 DoH DNS
    fallback:
        # 备用dns解析(可选),对抗 DNS 污染攻击的一种措施 支持 UDP、TCP、DoT、DoH
        - 8.8.8.8 # 谷歌DNS
        - 1.1.1.1 # Cloudflare DNS
        - tls://dns.rubyfish.cn:853 # 红鱼 DoT DNS
        - tls://1.0.0.1:853 # Cloudflare DoT DNS
        - tls://dns.google:853 # 谷歌 DoT DNS
        - https://dns.rubyfish.cn/dns-query # 红鱼 DoH DNS
        - https://cloudflare-dns.com/dns-query # Cloudflare DoH DNS
        - https://dns.google/dns-query # 谷歌 DoH DNS
    fallback-filter:
        # 配置fallback后默认启用fallback-filter,geoip-code为CN
        geoip: true # fallback-filter开关
        geoip-code: CN # 国家缩写,默认值为 CN
        ipcidr:
            # 在这个网段内的 IP 地址会被考虑为被污染的 IP
            - 240.0.0.0/4
        domain: #这些域名被视为已污染,匹配到这些域名,会直接使用 fallback解析
            - "+.google.com"
            - "+.facebook.com"
            - "+.youtube.com"

tun:
    enable: false # tun模式开关
    stack: gvisor #tun模式堆栈 gvisor | system (需系统防火墙放行)
    auto-route: true #自动设置全局路由
    auto-detect-interface: true #自动选择流量出站接口 (与interface-name冲突)
    dns-hijack: #dns劫持,一般设置为 any:53 即可, 即劫持所有 53 端口的 udp 流量
        - any:53
        # - tcp://any:53

# 出站接口名称 (与auto-detect-interface冲突)
interface-name: ""

# 1.clash DNS 请求逻辑：
#   (1) 当访问一个域名时, nameserver 与 fallback 列表内的所有服务器并发请求,得到域名对应的 IP 地址。
#   (2) clash 将选取 nameserver 列表内,解析最快的结果。
#   (3) 若解析结果中,IP 地址属于 国外,那么 clash 将选择 fallback 列表内,解析最快的结果。
#
# 2.clash DNS 配置注意事项：
#   (1) 如果为了确保 DNS 解析结果无污染,请仅保留列表内以 tls:// 或 https:// 开头的 DNS。
#   (2) 如果不在乎可能解析到污染的结果,更加追求速度, 仅保留nameserver列表并将fallback列表中的DNS插入到nameserver。
#
# 3.关于 DNS over HTTPS (DoH) 和 DNS over TLS (DoT) 的选择：
#   DoH: 以 https:// 开头的 DNS 服务器。拥有更好的伪装性,且几乎不可能被运营商或网络管理封锁,但查询效率和安全性可能略低。
#   DoT: 以 tls:// 开头的 DNS 服务器。拥有更高的安全性和查询效率,但端口有可能被管制或封锁。
#   若要了解更多关于 DoH/DoT 相关技术,请自行查阅规范文档。
#
# 4.Fake-IP（增强）模式：
#   客户端进行通讯时会先进行DNS查询目标IP地址,拿到查询结果后再尝试进行连接。Fake-IP 模式在客户端发起DNS请求时会立即返回一个保留地址（198.18.0.1/16）,
#   同时向上游DNS服务器查询结果,如果判定返回结果为污染或者命中代理规则,则直接发送域名至代理服务器进行远端解析。此时客户端立即向Fake-IP发起的请求会被快速响应,
#   节约了一次本地向DNS服务器查询的时间。实际效果：客户端响应速度加快,浏览体验更加顺畅,减轻网页加载时间过长的情况。
#   当 Clash 重启时,Fake IP 会重新从头开始分配；如果设备或软件缓存了 Clash 重启前解析的 Fake IP,可能会出现无法访问等问题。
#
# 5.Redir-Host（兼容）模式：
#   客户端进行通讯时DNS由Clash先进行并发查询,等待返回结果后再尝试进行规则判定和连接。
#   当判定需要代理时,使用fallback组DNS的查询结果进行通讯。实际效果：客户端响应速度一般,可能出现网页加载时间过长的情况。

# 代理组示例
proxies:
    - { name: Debug, type: socks5, server: 127.0.0.1, port: 1080 }
proxy-groups:
    - name: Proxy
      type: select
      proxies:
          - DIRECT
          - Debug
rules:
    - MATCH,Proxy
